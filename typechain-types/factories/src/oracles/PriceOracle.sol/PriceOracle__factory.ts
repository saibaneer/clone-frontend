/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  PriceOracle,
  PriceOracleInterface,
} from "../../../../src/oracles/PriceOracle.sol/PriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "governor_",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "sources",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "fallbackOracle",
        type: "address",
      },
      {
        internalType: "address",
        name: "baseCurrency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "baseCurrencyUnit",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CALLER_NOT_GOVERNOR",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "source",
        type: "address",
      },
    ],
    name: "LogAssetPriceSourceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "baseCurrency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseCurrencyUnit",
        type: "uint256",
      },
    ],
    name: "LogBaseCurrencySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "fallbackOracle",
        type: "address",
      },
    ],
    name: "LogFallbackOracleUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldGovernor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newGovernor",
        type: "address",
      },
    ],
    name: "LogGovernorSet",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_CURRENCY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BASE_CURRENCY_UNIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getAssetPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "assetPrice",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getAssetPriceSource",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
    ],
    name: "getAssetsPrices",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFallbackOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "getTokenDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collateralToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "loanToken",
        type: "address",
      },
    ],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "sources",
        type: "address[]",
      },
    ],
    name: "setAssetPriceSources",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fallbackOracle",
        type: "address",
      },
    ],
    name: "setFallbackOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newGovernor",
        type: "address",
      },
    ],
    name: "transferGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620010ff380380620010ff83398101604081905262000034916200039e565b856200004081620000ab565b506200004c8362000106565b62000058858562000150565b6001600160a01b038216608081905260a08290526040518281527f42a551670746220893385f53bda032df79e743f4d6fb60a391551272f7aade889060200160405180910390a25050505050506200045f565b600080546040516001600160a01b03808516939216917fa061d5933d76b5037f2ae209301c1236aa0c41000d13fc8adffa1cca8afed6ef91a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600280546001600160a01b0319166001600160a01b0383169081179091556040517fe19b4ecf624b226b1716c489739f8f67cd1dcd909a3b43601bf5db6021f0a0c790600090a250565b8051825114620001a65760405162461bcd60e51b815260206004820152601a60248201527f494e434f4e53495354454e545f504152414d535f4c454e475448000000000000604482015260640160405180910390fd5b60005b8251811015620002b657818181518110620001c857620001c862000449565b602002602001015160016000858481518110620001e957620001e962000449565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508181815181106200024a576200024a62000449565b60200260200101516001600160a01b031683828151811062000270576200027062000449565b60200260200101516001600160a01b03167faf833aa983c122582ce41aaa952fa633b6eb4ba8e214bb0444ea2dcc3c7d746460405160405180910390a3600101620001a9565b505050565b80516001600160a01b0381168114620002d357600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200030057600080fd5b815160206001600160401b03808311156200031f576200031f620002d8565b8260051b604051601f19603f83011681018181108482111715620003475762000347620002d8565b60405293845260208187018101949081019250878511156200036857600080fd5b6020870191505b8482101562000393576200038382620002bb565b835291830191908301906200036f565b979650505050505050565b60008060008060008060c08789031215620003b857600080fd5b620003c387620002bb565b60208801519096506001600160401b0380821115620003e157600080fd5b620003ef8a838b01620002ee565b965060408901519150808211156200040657600080fd5b506200041589828a01620002ee565b9450506200042660608801620002bb565b92506200043660808801620002bb565b915060a087015190509295509295509295565b634e487b7160e01b600052603260045260246000fd5b60805160a051610c6c620004936000396000818161014301526104360152600081816101ef015261040b0152610c6c6000f3fe608060405234801561001057600080fd5b50600436106100a45760003560e01c80630c340a24146100a9578063170aee73146100d25780632b00490d146100e75780636210308c14610108578063785c7cf6146101195780638c89b64f1461013e5780639d23d9f214610165578063b3596f0714610185578063b8a336c214610198578063bdb1e0aa146101ab578063d38bfff4146101d7578063e19f4700146101ea575b600080fd5b6000546100bc906001600160a01b031681565b6040516100c991906108a4565b60405180910390f35b6100e56100e03660046108d4565b610211565b005b6100fa6100f53660046108ef565b610248565b6040519081526020016100c9565b6002546001600160a01b03166100bc565b61012c6101273660046108d4565b6102d0565b60405160ff90911681526020016100c9565b6100fa7f000000000000000000000000000000000000000000000000000000000000000081565b61017861017336600461096d565b61033f565b6040516100c991906109ae565b6100fa6101933660046108d4565b6103e9565b6100e56101a63660046109f2565b6105d4565b6100bc6101b93660046108d4565b6001600160a01b039081166000908152600160205260409020541690565b6100e56101e53660046108d4565b610672565b6100bc7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b0316331461023c576040516322dcb7f560e21b815260040160405180910390fd5b610245816106a6565b50565b600080610254846103e9565b90506000610261846103e9565b9050600061026e866102d0565b9050600061027b866102d0565b905060008261028b836024610a73565b6102959190610a8c565b905060006102a760ff8316600a610b89565b90506000856102b68389610b95565b6102c09190610bac565b9750505050505050505b92915050565b600080829050806001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610314573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103389190610bce565b9392505050565b60606000826001600160401b0381111561035b5761035b610bf1565b604051908082528060200260200182016040528015610384578160200160208202803683370190505b50905060005b838110156103e1576103bc8585838181106103a7576103a7610c07565b905060200201602081019061019391906108d4565b8282815181106103ce576103ce610c07565b602090810291909101015260010161038a565b509392505050565b6001600160a01b038082166000818152600160205260408120549092908116917f0000000000000000000000000000000000000000000000000000000000000000909116900361045b57507f000000000000000000000000000000000000000000000000000000000000000092915050565b6001600160a01b0381166104e15760025460405163b3596f0760e01b81526001600160a01b039091169063b3596f07906104999086906004016108a4565b602060405180830381865afa1580156104b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104da9190610c1d565b91506105ce565b6000816001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610521573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105459190610c1d565b90506000811315610558578092506105cc565b60025460405163b3596f0760e01b81526001600160a01b039091169063b3596f07906105889087906004016108a4565b602060405180830381865afa1580156105a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c99190610c1d565b92505b505b50919050565b6000546001600160a01b031633146105ff576040516322dcb7f560e21b815260040160405180910390fd5b61066c848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506040805160208088028281018201909352878252909350879250869182918501908490808284376000920191909152506106f092505050565b50505050565b6000546001600160a01b0316331461069d576040516322dcb7f560e21b815260040160405180910390fd5b61024581610849565b600280546001600160a01b0319166001600160a01b0383169081179091556040517fe19b4ecf624b226b1716c489739f8f67cd1dcd909a3b43601bf5db6021f0a0c790600090a250565b80518251146107425760405162461bcd60e51b815260206004820152601a6024820152790929c869e9ca692a6a88a9ca8bea082a4829aa6be988a9c8ea8960331b604482015260640160405180910390fd5b60005b82518110156108445781818151811061076057610760610c07565b60200260200101516001600085848151811061077e5761077e610c07565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508181815181106107dc576107dc610c07565b60200260200101516001600160a01b03168382815181106107ff576107ff610c07565b60200260200101516001600160a01b03167faf833aa983c122582ce41aaa952fa633b6eb4ba8e214bb0444ea2dcc3c7d746460405160405180910390a3600101610745565b505050565b600080546040516001600160a01b03808516939216917fa061d5933d76b5037f2ae209301c1236aa0c41000d13fc8adffa1cca8afed6ef91a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0391909116815260200190565b80356001600160a01b03811681146108cf57600080fd5b919050565b6000602082840312156108e657600080fd5b610338826108b8565b6000806040838503121561090257600080fd5b61090b836108b8565b9150610919602084016108b8565b90509250929050565b60008083601f84011261093457600080fd5b5081356001600160401b0381111561094b57600080fd5b6020830191508360208260051b850101111561096657600080fd5b9250929050565b6000806020838503121561098057600080fd5b82356001600160401b0381111561099657600080fd5b6109a285828601610922565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b818110156109e6578351835292840192918401916001016109ca565b50909695505050505050565b60008060008060408587031215610a0857600080fd5b84356001600160401b0380821115610a1f57600080fd5b610a2b88838901610922565b90965094506020870135915080821115610a4457600080fd5b50610a5187828801610922565b95989497509550505050565b634e487b7160e01b600052601160045260246000fd5b60ff81811683821601908111156102ca576102ca610a5d565b60ff82811682821603908111156102ca576102ca610a5d565b600181815b80851115610ae0578160001904821115610ac657610ac6610a5d565b80851615610ad357918102915b93841c9390800290610aaa565b509250929050565b600082610af7575060016102ca565b81610b04575060006102ca565b8160018114610b1a5760028114610b2457610b40565b60019150506102ca565b60ff841115610b3557610b35610a5d565b50506001821b6102ca565b5060208310610133831016604e8410600b8410161715610b63575081810a6102ca565b610b6d8383610aa5565b8060001904821115610b8157610b81610a5d565b029392505050565b60006103388383610ae8565b80820281158282048414176102ca576102ca610a5d565b600082610bc957634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610be057600080fd5b815160ff8116811461033857600080fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060208284031215610c2f57600080fd5b505191905056fea264697066735822122013b088f11f25479e8326a8fa5122fc6efab1d1eb075c86fae5258079bbc9b05b64736f6c63430008180033";

type PriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PriceOracle__factory extends ContractFactory {
  constructor(...args: PriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    governor_: AddressLike,
    assets: AddressLike[],
    sources: AddressLike[],
    fallbackOracle: AddressLike,
    baseCurrency: AddressLike,
    baseCurrencyUnit: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      governor_,
      assets,
      sources,
      fallbackOracle,
      baseCurrency,
      baseCurrencyUnit,
      overrides || {}
    );
  }
  override deploy(
    governor_: AddressLike,
    assets: AddressLike[],
    sources: AddressLike[],
    fallbackOracle: AddressLike,
    baseCurrency: AddressLike,
    baseCurrencyUnit: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      governor_,
      assets,
      sources,
      fallbackOracle,
      baseCurrency,
      baseCurrencyUnit,
      overrides || {}
    ) as Promise<
      PriceOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PriceOracle__factory {
    return super.connect(runner) as PriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceOracleInterface {
    return new Interface(_abi) as PriceOracleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PriceOracle {
    return new Contract(address, _abi, runner) as unknown as PriceOracle;
  }
}
