/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  PointsVotingStrategy,
  PointsVotingStrategyInterface,
} from "../../../../src/governance/voting-strategies/PointsVotingStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "voterPower",
        type: "uint256",
      },
    ],
    name: "calculateVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060b68061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806390ac3ccf14602d575b600080fd5b603c60383660046068565b604e565b60405190815260200160405180910390f35b6000808211605c576000605f565b60015b60ff1692915050565b600060208284031215607957600080fd5b503591905056fea2646970667358221220b855bec6eac0a8c3fca184de1de47ee61b72290d8fd9728b17c6bdb842df24e364736f6c63430008180033";

type PointsVotingStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PointsVotingStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PointsVotingStrategy__factory extends ContractFactory {
  constructor(...args: PointsVotingStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PointsVotingStrategy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): PointsVotingStrategy__factory {
    return super.connect(runner) as PointsVotingStrategy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PointsVotingStrategyInterface {
    return new Interface(_abi) as PointsVotingStrategyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PointsVotingStrategy {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as PointsVotingStrategy;
  }
}
