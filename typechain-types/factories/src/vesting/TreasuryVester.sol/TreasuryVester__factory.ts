/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  TreasuryVester,
  TreasuryVesterInterface,
} from "../../../../src/vesting/TreasuryVester.sol/TreasuryVester";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Error_Cannot_Claim_Before_Vesting_Cliff",
    type: "error",
  },
  {
    inputs: [],
    name: "Error_Unauthorised_Caller",
    type: "error",
  },
  {
    inputs: [],
    name: "Error_Vesting_Cliff_Too_Early",
    type: "error",
  },
  {
    inputs: [],
    name: "Error_Vesting_End_Too_Early",
    type: "error",
  },
  {
    inputs: [],
    name: "Error_Zero_Address",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountClaimed",
        type: "uint256",
      },
    ],
    name: "LogVestingTokenClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "old",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "LogVestingTokenRecipientChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee_",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAmountToClaim",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vestingToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "vestingAmount_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vestingBegin_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vestingCliff_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vestingEnd_",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient_",
        type: "address",
      },
    ],
    name: "setRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingBegin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingCliff",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingEnd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingToken",
    outputs: [
      {
        internalType: "contract IERC20Votes",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100d0565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161561006e5760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100cd5780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b61078d806100df6000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8062728f76146100a857806319d152fa146100c45780633bbed4a0146100e45780634e71d92d146100f95780635c19a95c1461010157806366d003ac1461011457806384a1931f1461012757806386489ba914610130578063c046371114610143578063c1252a601461014c578063e29bc68b14610154578063f3640e741461015d575b600080fd5b6100b160025481565b6040519081526020015b60405180910390f35b6000546100d7906001600160a01b031681565b6040516100bb919061060d565b6100f76100f236600461063d565b610166565b005b6100f76101dd565b6100f761010f36600461063d565b6102d6565b6001546100d7906001600160a01b031681565b6100b160055481565b6100f761013e36600461065f565b610366565b6100b160065481565b6100b1610548565b6100b160035481565b6100b160045481565b6001546001600160a01b0316331461019157604051635b4e91ab60e01b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b03831690811790915560405133907f853574d4e6458584adae7188f7f0d57f01f126b6c95113e4a4fd4c9e19a2370c90600090a350565b60045442101561020057604051632e0b2f6360e01b815260040160405180910390fd5b600061020a610548565b905080156102d3574260065560005460015460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303816000875af115801561026b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028f91906106b4565b506001546040518281526001600160a01b03909116907fafeff28e2c749f9fbd6fc2e21da41124f0a312a40f99238b1b7db49e29dac97e9060200160405180910390a25b50565b6001546001600160a01b0316331461030157604051635b4e91ab60e01b815260040160405180910390fd5b6000546040516317066a5760e21b81526001600160a01b0390911690635c19a95c9061033190849060040161060d565b600060405180830381600087803b15801561034b57600080fd5b505af115801561035f573d6000803e3d6000fd5b5050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03166000811580156103ab5750825b90506000826001600160401b031660011480156103c75750303b155b9050811580156103d5575080155b156103f35760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561041d57845460ff60401b1916600160401b1785555b6001600160a01b038b1661044457604051638a448d5360e01b815260040160405180910390fd5b6001600160a01b038a1661046b57604051638a448d5360e01b815260040160405180910390fd5b8787101561048c5760405163fd138d8360e01b815260040160405180910390fd5b8686116104ac57604051633cc9e71160e11b815260040160405180910390fd5b600080546001600160a01b03808e166001600160a01b03199283161790925560018054928d169290911691909117905560028990556003889055600487905560058690556006889055831561053b57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050505050565b600060045442101561055a5750600090565b60055442106105d9576000546040516370a0823160e01b81526001600160a01b03909116906370a082319061059390309060040161060d565b602060405180830381865afa1580156105b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d491906106d6565b905090565b6003546005546105e99190610705565b6006546105f69042610705565b600254610603919061071e565b6105d49190610735565b6001600160a01b0391909116815260200190565b80356001600160a01b038116811461063857600080fd5b919050565b60006020828403121561064f57600080fd5b61065882610621565b9392505050565b60008060008060008060c0878903121561067857600080fd5b61068187610621565b955061068f60208801610621565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6000602082840312156106c657600080fd5b8151801515811461065857600080fd5b6000602082840312156106e857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610718576107186106ef565b92915050565b8082028115828204841417610718576107186106ef565b60008261075257634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220715815cb2df28f4b6cb4fe8263932776e91e40b9bf2cf16c3ced419385a8f03564736f6c63430008180033";

type TreasuryVesterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasuryVesterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TreasuryVester__factory extends ContractFactory {
  constructor(...args: TreasuryVesterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TreasuryVester & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TreasuryVester__factory {
    return super.connect(runner) as TreasuryVester__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasuryVesterInterface {
    return new Interface(_abi) as TreasuryVesterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TreasuryVester {
    return new Contract(address, _abi, runner) as unknown as TreasuryVester;
  }
}
