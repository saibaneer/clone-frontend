/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IVariableIrm,
  IVariableIrmInterface,
} from "../../../src/interfaces/IVariableIrm";

const _abi = [
  {
    inputs: [],
    name: "SPATHA",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "loanToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "riskTier",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "lltv",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "irm",
            type: "address",
          },
        ],
        internalType: "struct MarketParams",
        name: "marketParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "totalSupplyAssets",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "totalSupplyShares",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "totalBorrowAssets",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "totalBorrowShares",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "lastUpdate",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "fee",
            type: "uint128",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isAddLiquidityPaused",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isAddCollateralPaused",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isBorrowPaused",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isWithdrawLiquidityPaused",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isWithdrawCollateralPaused",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isRepayPaused",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isLiquidatePaused",
                type: "bool",
              },
            ],
            internalType: "struct PauseStatuses",
            name: "pauseStatuses",
            type: "tuple",
          },
        ],
        internalType: "struct Market",
        name: "market",
        type: "tuple",
      },
    ],
    name: "borrowRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "loanToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "riskTier",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "lltv",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "irm",
            type: "address",
          },
        ],
        internalType: "struct MarketParams",
        name: "marketParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "totalSupplyAssets",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "totalSupplyShares",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "totalBorrowAssets",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "totalBorrowShares",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "lastUpdate",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "fee",
            type: "uint128",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isAddLiquidityPaused",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isAddCollateralPaused",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isBorrowPaused",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isWithdrawLiquidityPaused",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isWithdrawCollateralPaused",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isRepayPaused",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isLiquidatePaused",
                type: "bool",
              },
            ],
            internalType: "struct PauseStatuses",
            name: "pauseStatuses",
            type: "tuple",
          },
        ],
        internalType: "struct Market",
        name: "market",
        type: "tuple",
      },
    ],
    name: "borrowRateView",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Id",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "rateAtTarget",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IVariableIrm__factory {
  static readonly abi = _abi;
  static createInterface(): IVariableIrmInterface {
    return new Interface(_abi) as IVariableIrmInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IVariableIrm {
    return new Contract(address, _abi, runner) as unknown as IVariableIrm;
  }
}
